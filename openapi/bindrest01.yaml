openapi: "3.0.0"

info:
  title: Bind9+ Rest-API for DomainConnect structured data v0.0.1
  description: "This is a Rest-API to dynamically configure a BIND9+ server via HTTP(s). Its main purpose is to be utilized in a DomainConnect-environment to automate DNS-management."
  version: "0.3"
  contact:
    email: "cse@heg.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers:
  - url: http://localhost:9090/v0.0.2
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/C_S_E/Bind-DomainConnect-Rest/0.2
    
tags:
  - name: Single 
    description: Single record-operations, add one, delete one
  - name: Multi
    description: Multiple record-operations, handles a list of records to add or delete
  - name: Misc
    description: Miscellanous calls

paths:
  /dns/getzone:
    get:
      parameters:
        - in: query
          name: domain
          required: true
          schema:
            type: string
            pattern: '^\w+\.\w+$'
      summary: Get the complete zone for a certain domain
      description: Get the complete zone for a certain domain
      operationId: RequestHandler.get_zone
      tags:
        - Misc
      responses:
        200:
          description: JSON response echoing the data
          content:
            applicaton/json:
              schema:
                type: string
                example: "{'body': {'pointsTo': '198.51.100.42', 'priority': 200}, 'domain': 'hosteurope.de', 'host': 'vs6', 'rtype': 'MX'}"

  /dns/delete/{domain}/{rtype}/{host}:
    parameters:
      - in: path
        name: rtype
        required: true
        schema:
          type: string
          pattern: '^\w+$'
      - in: path
        name: domain
        required: true
        schema:
          type: string
          pattern: '^\w+\.\w+$'
      - in: path
        name: host
        required: true
        schema:
          type: string
          pattern: '^\w+$'
    post:
      summary: Delete any single DNS-record in a specific domain/zone
      description: Delete any single DNS-record in a specific domain/zone
      operationId: RequestHandler.del_record
      tags:
        - Single
      responses:
        200:
          description: JSON response echoing the data
          content:
            applicaton/json:
              schema:
                type: string
                example: "{'body': {'pointsTo': '198.51.100.42', 'priority': 200}, 'domain': 'hosteurope.de', 'host': 'vs6', 'rtype': 'MX'}"
      requestBody:
        description: Record-specific options, priority for MX, data for TXT, etc.
        required: true
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/ARecordShort'
                - $ref: '#/components/schemas/AAAARecordShort'
                - $ref: '#/components/schemas/MXRecordShort'
                - $ref: '#/components/schemas/TXTRecordShort'
                - $ref: '#/components/schemas/SRVRecordShort'
                - $ref: '#/components/schemas/CNAMERecordShort'
                - $ref: '#/components/schemas/NSRecordShort'
                - $ref: '#/components/schemas/SPFMRecordShort'

  /dns/add/{domain}/{rtype}/{host}:
    parameters:
      - in: path
        name: rtype
        required: true
        schema:
          type: string
          pattern: '^\w+$'
      - in: path
        name: domain
        required: true
        schema:
          type: string
          pattern: '^\w+\.\w+$'
      - in: path
        name: host
        required: true
        schema:
          type: string
          pattern: '^\w+$'
    post:
      summary: Add / Update any single DNS-record in a specific donain/zone
      description: Add / Update any single DNS-record in a specific domain/zone
      operationId: RequestHandler.add_record
      tags:
        - Single
      responses:
        200:
          description: JSON response echoing the data
          content:
            applicaton/json:
              schema:
                type: string
                example: "{'body': {'pointsTo': '198.51.100.42', 'priority': 200}, 'domain': 'hosteurope.de', 'host': 'vs6', 'rtype': 'MX'}"
      requestBody:
        description: Record-specific options, priority for MX, data for TXT, etc.
        required: true
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/ARecordShort'
                - $ref: '#/components/schemas/AAAARecordShort'
                - $ref: '#/components/schemas/MXRecordShort'
                - $ref: '#/components/schemas/TXTRecordShort'
                - $ref: '#/components/schemas/SRVRecordShort'
                - $ref: '#/components/schemas/CNAMERecordShort'
                - $ref: '#/components/schemas/NSRecordShort'
                - $ref: '#/components/schemas/SPFMRecordShort'

    get:
      summary: Get any single DNS-record from a specific domain/zone
      description: Get any single DNS-record from a specific domain/zone
      operationId: RequestHandler.get_record
      tags:
        - Single
      responses:
        200:
          description: JSON response echoing the data
          content:
            applicaton/json:
              schema:
                type: string
                example: "{'body': {'pointsTo': '198.51.100.42', 'priority': 200}, 'domain': 'hosteurope.de', 'host': 'vs6', 'rtype': 'MX'}"
  /dnsmulti/{action}:
    parameters:
      - in: path
        name: action
        required: true
        schema:
          type: string
          pattern: '^[ADD|DELETE]$'
    post:
      summary: Add / Update / Delete multiple DNS-record in a specific domain/zone
      description: Add / Update / Delete multiple DNS-record in a specific domain/zone
      operationId: RequestHandler.add_records
      tags:
        - Multi
      responses:
        200:
          description: JSON response echoing the data
          content:
            applicaton/json:
              schema:
                type: string
                example: "{'body': {'pointsTo': '198.51.100.42', 'priority': 200}, 'domain': 'hosteurope.de', 'host': 'vs6', 'rtype': 'MX'}"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiRecord'
    get:
      summary: Get multiple DNS-record from local bind-service
      description: Get multiple DNS-records local bind service
      operationId: RequestHandler.get_records
      tags:
        - Multi
      responses:
        200:
          description: JSON response echoing the data
          content:
            applicaton/json:
              schema:
                type: string
                example: "{'body': {'pointsTo': '198.51.100.42', 'priority': 200}, 'domain': 'hosteurope.de', 'host': 'vs6', 'rtype': 'MX'}"
components:
  schemas:
    CNAMERecordShort:
      required:
      - pointsTo
      properties:
        pointsTo:
          type: string
        ttl:
          type: integer
          format: int32
    SPFMRecordShort:
      required:
      - spfRules
      properties:
        spfRules:
          type: string
    NSRecordShort:
      required:
      - pointsTo
      - host
      properties:
        pointsTo:
          type: string
        ttl:
          type: integer
          format: int32
        host:
          type: string
    MXRecordShort:
      required:
        - pointsTo
        - priority
      properties:
        pointsTo:
          type: string
        ttl:
          type: integer
          format: int32
        priority:
          type: integer
          format: int32
    ARecordShort:
      required:
        - pointsTo
      properties:
        pointsTo:
          type: string
          format: ipv4
        ttl:
          type: integer
          format: int32
    AAAARecordShort:
      required:
        - pointsTo
        - ttl
      properties:
        pointsTo:
          type: string
          format: ipv6
        ttl:
          type: integer
          format: int32
    TXTRecordShort:
      required:
        - data
      properties:
        data:
          type: string
        txtConflictMatchingMode:
          type: string
        txtConflictMatchingPrefix:
          type: string
    SRVRecordShort:
      required:
        - priority
        - protocol
        - service
        - weight
        - port
        - target
      properties:
        priority:
          type: integer
        protocol:
          type: string
        service:
          type: string
        weight:
          type: integer
        port:
          type: integer
        target:
          type: string
        ttl:
          type: integer
          format: int32
    ARecordFull:
      required:
        - host
        - pointsTo
        - domain
      properties:
        host:
          type: string
          pattern: "^\\w+$"
        pointsTo:
          type: string
          format: ipv4
        domain:
          type: string
          pattern: "^.+\\..*$"
        ttl:
          type: integer
          format: int32
        type:
          type: string
    MXRecordFull:
      required:
        - host
        - pointsTo
        - domain
        - priority
      properties:
        host:
          type: string
          pattern: "^\\w+$"
        pointsTo:
          type: string
        ttl:
          type: integer
          format: int32
        domain:
          type: string
          pattern: "^.+\\..*$"
        priority:
          type: integer
          format: int32
        type:
          type: string
    MultiRecord:
      type: array
      items:
        oneOf:
         - $ref: '#/components/schemas/ARecordFull'
         - $ref: '#/components/schemas/MXRecordFull'
